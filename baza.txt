CREATE TABLE IF NOT EXISTS ucitelji (
    ID                INTEGER        PRIMARY KEY AUTOINCREMENT,
    Ime               VARCHAR (50)   NOT NULL,
    Priimek           VARCHAR (50)   NOT NULL,
    Eposta            VARCHAR (100)  NOT NULL,
    Cena              DECIMAL (5, 2) NOT NULL,
    ID_uporabnika     INTEGER        NOT NULL,
    FOREIGN KEY (ID_uporabnika) REFERENCES uporabniki(ID)
);
CREATE TABLE IF NOT EXISTS ucenci (
    ID                INTEGER        PRIMARY KEY AUTOINCREMENT,
    Ime               VARCHAR (50)   NOT NULL,
    Priimek           VARCHAR (50)   NOT NULL,
    Eposta            VARCHAR (100)  NOT NULL,
    ID_uporabnika     INTEGER        NOT NULL,
    FOREIGN KEY (ID_uporabnika) REFERENCES uporabniki(ID)
);

CREATE TABLE IF NOT EXISTS uporabniki (
    ID                INTEGER        PRIMARY KEY AUTOINCREMENT,
    Uporabnisko_ime   VARCHAR (50)   NOT NULL UNIQUE,
    Geslo             VARCHAR (100)  NOT NULL,
    Vrsta             INTEGER        NOT NULL CHECK(Vrsta IN (0, 1, 2)) -- 0 za učence, 1 za učitelje, 2 za admin
);

CREATE TABLE IF NOT EXISTS predmeti (
    ID           INTEGER       PRIMARY KEY AUTOINCREMENT,
    Ime_predmeta VARCHAR (100) NOT NULL
);

CREATE TABLE IF NOT EXISTS instrukcije (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Datum DATETIME NOT NULL,
    Trajanje INTEGER NOT NULL, -- trajanje v minutah
    Status TEXT NOT NULL CHECK(Status IN ('Rezervirano', 'Opravljeno', 'Preklicano')),
    ID_ucitelja INTEGER NOT NULL,
    ID_ucenca INTEGER NOT NULL,
    Mnenje TEXT,
    Ocena INTEGER DEFAULT NULL,
    ID_predmeta INTEGER,
    FOREIGN KEY (ID_ucitelja) REFERENCES ucitelji(ID),
    FOREIGN KEY (ID_ucenca) REFERENCES ucenci(ID),
    FOREIGN KEY (ID_predmeta) REFERENCES predmeti(ID)
);

CREATE TABLE IF NOT EXISTS uciteljiPredmeti (
    ID_ucitelja INTEGER NOT NULL,
    ID_predmeta INTEGER NOT NULL,
    PRIMARY KEY (ID_ucitelja, ID_predmeta),
    FOREIGN KEY (ID_ucitelja) REFERENCES ucitelji(ID),
    FOREIGN KEY (ID_predmeta) REFERENCES predmeti(ID)
);